; реализуем функцию x_1 & !x_2 | !x_3 & x_4
; вариант реализации - использование битовых функций
; биты либо в регистрах, либо в резидентной памяти данных (с 20H по 2FH)
; также могут адресоваться отдельные биты аккумулятора A и регистра B.

; в качестве "логического" аккумулятора, участвующего во всех операциях
; с двумя операндами, выступает признак переноса C (разряд 7 PSW)

$mod52

ORG 0h

; Основной цикл программы
MAIN:
    MOV C, P0.0 ; пересылка бита в перенос
    ANL C, /P0.1 ; логическое И инверсии бита и переноса
    
    MOV 0E0H, C ; пересылка переноса в бит аккумулятора
    
    MOV C,P0.3 ; пересылка бита в перенос
    ANL C,/P0.2 ; логическое И инверсии бита и переноса

    ORL C, 0E0H ; логическое ИЛИ бита и переноса

    JC RESULT1 ; переход, если перенос равен единице
    JMP RESULT0 ; иначе

; Результат равен 1
RESULT1:
    MOV P1, #0FFh ; в порт P1 байт индикации 0FFh
    JMP FINAL

; Результат равен 0
RESULT0:
    MOV P1, #0h ; в порт P1 байт индикации 0h

; ЗАЦИКЛИВАЕМСЯ
FINAL:
    JMP MAIN

END
